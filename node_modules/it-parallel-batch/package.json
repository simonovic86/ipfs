{
  "_from": "it-parallel-batch@^1.0.3",
  "_id": "it-parallel-batch@1.0.6",
  "_inBundle": false,
  "_integrity": "sha512-ym2o1bZHZAl2euR79ojKsvVJt77DGQrmSTgDf+g3ERF/Agp2+VI9VM3ikQ9T1BBdgbSIylPeatNGMIyZgz7J7g==",
  "_location": "/ipfs/it-parallel-batch",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "it-parallel-batch@^1.0.3",
    "name": "it-parallel-batch",
    "escapedName": "it-parallel-batch",
    "rawSpec": "^1.0.3",
    "saveSpec": null,
    "fetchSpec": "^1.0.3"
  },
  "_requiredBy": [
    "/ipfs/ipfs-unixfs-importer"
  ],
  "_resolved": "https://registry.npmjs.org/it-parallel-batch/-/it-parallel-batch-1.0.6.tgz",
  "_shasum": "680aa9fe15002c6d00606a577e45f6211ea70f5e",
  "_spec": "it-parallel-batch@^1.0.3",
  "_where": "/Users/janko/Development/Git/simonovic86/js-ipfs/packages/ipfs/node_modules/ipfs-unixfs-importer",
  "author": {
    "name": "Alex Potsides",
    "email": "alex@achingbrain.net"
  },
  "bugs": {
    "url": "https://github.com/achingbrain/it/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "it-batch": "^1.0.6"
  },
  "deprecated": false,
  "description": "Takes an async iterator that emits promise-returning functions, invokes them in parallel and emits the results in the same order as the input",
  "devDependencies": {
    "ava": "^3.12.1",
    "delay": "^4.3.0",
    "it-all": "^1.0.4",
    "nyc": "^15.1.0",
    "standard": "^14.3.1",
    "typescript": "^4.0.2"
  },
  "gitHead": "c3b92107f44c99ccbf3299827db45beaf2405c24",
  "homepage": "https://github.com/achingbrain/it#readme",
  "license": "ISC",
  "main": "index.js",
  "name": "it-parallel-batch",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/achingbrain/it.git"
  },
  "scripts": {
    "build": "npm run build:types",
    "build:dep:types": "cd node_modules/it-batch && npm run build:types",
    "build:types": "npm run build:dep:types && tsc --emitDeclarationOnly --declarationDir dist",
    "check": "npm run build:dep:types && tsc --noEmit",
    "clean": "rm -rf .nyc_output coverage dist",
    "coverage": "nyc --reporter html --reporter lcov ava",
    "lint": "standard",
    "prepublishOnly": "npm run build",
    "test": "ava"
  },
  "typesVersions": {
    "*": {
      "*": [
        ".",
        "dist/*"
      ]
    }
  },
  "version": "1.0.6"
}
